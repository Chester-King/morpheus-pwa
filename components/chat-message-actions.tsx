import { CheckIcon, CopyIcon, RepeatIcon } from '@chakra-ui/icons'
import { Button, ButtonGroup, Flex, IconButton, Text } from '@chakra-ui/react'
import { useCallback } from 'react'

import { useCopyToClipboard } from '@/lib/hooks/use-copy-to-clipboard'

type ChatMessageProps = {
  onShorten: () => void
  onEaborate: () => void
  onRegenerate: () => void
  model?: string
  message: string
  isLatestMessage?: boolean
}

export const ChatMessageActions: React.FC<ChatMessageProps> = ({
  onShorten,
  onEaborate,
  model,
  message,
  isLatestMessage,
  onRegenerate,
}) => {
  const { isCopied, copyToClipboard } = useCopyToClipboard({ timeout: 2000 })

  const handleCopy = useCallback(() => {
    if (isCopied) return
    copyToClipboard(message)
  }, [copyToClipboard, isCopied, message])

  return (
    <Flex alignItems='center' className='chat-actions' opacity={isLatestMessage ? 1 : 0}>
      <ButtonGroup size='sm' variant='ghost' colorScheme='brand' spacing={0} ml={-2}>
        <IconButton
          icon={isCopied ? <CheckIcon /> : <CopyIcon />}
          aria-label='copy'
          onClick={handleCopy}
        />
        {isLatestMessage && (
          <>
            <IconButton onClick={onRegenerate} icon={<RepeatIcon />} aria-label='refresh' />
            <Button onClick={onShorten}>Shorten</Button>
            <Button onClick={onEaborate}>Elaborate</Button>
          </>
        )}
      </ButtonGroup>
      {model && (
        <Text fontSize='xs' ml='auto' color='text.subtle' display={{ base: 'none', md: 'block' }}>
          Generated by {model}
        </Text>
      )}
    </Flex>
  )
}
